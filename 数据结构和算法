1.1、稀疏数组
1.2、队列
2.1、链表｛单向，双向｝
2.2、Josephu(约瑟夫)问题---单向环形（也称丢手绢问题)
------------------------------------------加餐👇---------------------------------------
2.3、跳表【跳跃链表】
2.4、Lru【双向链表+HashMap】
------------------------------------------加餐👆---------------------------------------
3、栈及波兰表达式｛前，中，后缀【以及转换】｝ ----> 栈，波兰表达式两套计算器实现
3.1、栈
3.2、波兰表达式
4、递归及回溯算法 ----> 八皇后问题
4.1、递归
4.2、回溯算法
4.3、八皇后问题
5、排序算法（插入【直插，希尔】，选择【简单，堆】，交换【冒泡，快速】，并归，基数）
5.0、算法的时间复杂度
5.1、插入算法
5.2、选择算法
5.3、交换算法
5.4、归并算法
5.5、基数算法
------------------------------------------加餐👇---------------------------------------
5.6、TimSort算法【插入+归并】
------------------------------------------加餐👆---------------------------------------
6、查找算法（线性，二分，插值，斐波那契｛也称黄金分割｝）
6.1、线性查找算法
6.2、二分查找算【递归】
6.3、插值查找算法
6.4、斐波那契查找(黄金分割)算法
7、哈希表（散列）：增删改查
7.1、哈希表(散列)
8、基础树结构（二叉树，顺序存储二叉树，线索化二叉树）,注：标题不删除
8.0、数组-链表-树区别
8.1、二叉树
8.2、顺序存储二叉树
8.3、线索化二叉树
9、树结构场景（堆排序，赫夫曼树，赫夫曼编码，二叉排序树，平衡二叉树(AVL树)）
9.1、堆排序
9.2、赫夫曼树
9.3、赫夫曼编码
9.4、二叉排序树
9.5、平衡二叉树(AVL树)
9.5、红黑树(AVL树)
10、多路查找树（二叉树与B树，2-3树，B树、B+树和B*树）
10.0、二叉树与B树，2-3树，B树、B+树和B*树【★】
10.1、二叉树与B树 【↑】
10.2、2-3树 【↑↑】
10.3、B树 【↑↑↑】
10.4、B+树和B*树 【↑↑↑↑】
11、图（深度优先搜索和广度优先搜索）
11.1、图（DFS and BFS ）

